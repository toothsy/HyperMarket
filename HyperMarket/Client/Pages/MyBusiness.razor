@page "/MyBusiness"
@using HyperMarket.DB.Models
@using HyperMarket.Shared
@using System.ComponentModel.DataAnnotations
@inject HyperMarket.DB.Interfaces.IUserService userService
@*
    <PageTitle>My Profile</PageTitle>
    @if (users.Count>0)
    {
    <p>@users[0].UserName</p>
    }*@
<div class="bg">
    <div class = "first">
    <MudGrid  Class="d-flex justify-center align-center">
        <MudItem class="second">
            <MudCard>
                <h2 class="log">My Business</h2>
                <MudCardContent>
                    <h6 class="side">Username</h6> <MudTextField @bind-Value="users1.UserName" Label="" ReadOnly="true" Variant="Variant.Filled" Margin="Margin.Dense">@users1.UserName</MudTextField>
                    <h6 class="side">Business Name</h6> <MudTextField @bind-Value="Business1.BusinessName" Label="" Variant="Variant.Filled" Margin="Margin.Dense"></MudTextField>
                    <h6 class="side">Business Description</h6>  <MudTextField @bind-Value="Business1.BusinessDescription" Label="" Variant="Variant.Filled" Margin="Margin.Dense"></MudTextField>
                    <h6 class="side">Mail Id</h6> <MudTextField @bind-Value="users1.EmailId" Label="" Variant="Variant.Filled" Margin="Margin.Dense"></MudTextField>
                    <h6 class="side">Location</h6> <MudTextField @bind-Value="Business1.LocationId" Label="" ReadOnly="true" Variant="Variant.Filled" />
                </MudCardContent>
                <MudCardActions>
                    <div class="btn">
                        <MudButton ButtonType="ButtonType.Submit" Align="align.Center"><div class="btncolor">Update</div></MudButton>
                    </div>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
    </div>
</div>

@code {
    //public string searchString = "";
    public List<User> users = new List<User>();
    //public CustomerDetail customer1 = new CustomerDetail();
    public User users1 = new User();

    protected override async Task OnInitializedAsync()
    {
        //users=await userService.GetUsers();
        users1 = await userService.GetUserById(2);
    }

    public List<BusinessDetail> Businesses = new List<BusinessDetail>();


    public BusinessDetail Business1 = new BusinessDetail();


    //public async Task GetUsersById(int id)
    //{
    //    users1 =await userService.GetUserById(id);
    //}

    //public void Save()
    //{
    //    userService.SaveUser(user);
    //    user = new User();
    //    GetUsers();
    //}

    //public void Edit(int id)
    //{
    //    user = users.FirstOrDefault(c => c.UserId == id);
    //}

    //public void Delete(int id)
    //{
    //    userService.DeleteUser(id);
    //    GetUsers();
    //}
    }