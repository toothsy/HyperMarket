@page "/MyPayment"

@using HyperMarket.Shared
@using HyperMarket.DB.Models
@inject HyperMarket.Data.Interfaces.IPaymentService paymentService
@inject HyperMarket.Data.Interfaces.ICustomerDetailService customerdetailService
@* @inject HyperMarket.Data.Interfaces.IOrderService orderService*@


<div class="bg">
   <center>
      <div class="first">
         <MudGrid Class="d-flex justify-center align-center">
            <div class="second">
               <MudItem xs="12" sm="7">
                    <div class="third">
                        <MudCard class="fourth">
                             <MudCardContent>
                                 <h2 class="log">Payment</h2>
                                    <div class="radiotype">
                                        <MudRadioGroup @bind-SelectedOption="@Placement">
                                            <MudRadio Color="Color.Primary" Option="@(Placement.Top)">Credit Card</MudRadio> <br />
                                            <MudRadio Color="Color.Primary" Option="@(Placement.Bottom)">Debit Card</MudRadio><br />
                                            <div class="radio3">
                                                <MudRadio Color="Color.Primary" Option="@(Placement.Left)">Paytm</MudRadio><br />
                                            </div>
                                            <div class="radio4">
                                                <MudRadio class="radio4" Color="Color.Primary" Option="@(Placement.Right)">Net Banking</MudRadio>
                                            </div><br /><br /><br />
                                        </MudRadioGroup>
                                        <h6>Total Amount :</h6>
                                        <div class="text1">
                                            <MudTextField @bind-Value="payment1.Price" Label="" ReadOnly="true" Variant="Variant.Filled" Margin="Margin.Dense"></MudTextField>
                                        </div>
                                        @*<h6>Total credits:</h6><MudTextField class = "text1" @bind-Value="cus.MyCredits" Label="" ReadOnly="true" Variant="Variant.Filled" Margin="Margin.Dense"></MudTextField>
                                        *@
                                    </div>
                                </MudCardContent>
                                <div class="checkbox1">
                                    <MudCheckBox T="bool" Required="false" Class="ml-n2" Label="Use Credits" />
                                </div>
                                <MudCardActions>
                                    <div class="btn">
                                        <MudButton ButtonType="ButtonType.Submit" Align="align.Center" @onsubmit="postData"> <a href="/PaymentSuccessful"><div class="btncolor">Pay Now</div></a></MudButton>
                                    </div>
                                </MudCardActions>
                            </MudCard>
                        </div>
                    </MudItem>
                </div>
            </MudGrid>
        </div>
    </center>
</div>


@code {
    public Placement Placement { get; set; } = Placement.Right;
    public bool Basic_CheckBox2 { get; set; } = false;

    public string TextValue { get; set; }

    public Payment payment1 = new Payment();

    public CustomerDetail customer1 = new CustomerDetail();
    public CustomerDetail customer2 = new CustomerDetail();

    //public Order ord = new Order();

    protected override async Task OnInitializedAsync()
    {
        payment1 = await paymentService.GetPaymentById(801);
        customer1 = await customerdetailService.GetCustomerDetailById(1001);



        //ord = await orderService.GetOrderById(1);


        //     private async Task OnValidSubmit(EditContext context)
        //{
        //    await customerdetailServices.UpdateUser(users1);
        //}
    }
    void postData()
    {
        int s = payment1.Price;
        customer1.MyCredits = customer1.MyCredits + s;
    }
    private async Task OnValidSubmit(EditContext context)
    {

        await customerdetailService.UpdateUser(customer1);
    }
    //if (@bind-SelectedOption="@Placement.Top")
    //{
    //    int s = pay.Price;
    //    cus.MyCredits = cus.MyCredits + s;

    //}


    //public void  Placement (object sender, EventArgs e)
    //{
    //    if (Placement.Left.Checked)
    //    {
    //        Response.Redirect("~/Account/Register.aspx");
    //    }
    //    else if (RadioButton1.Checked)
    //    {

    //        Response.Redirect("~/Job/Emp_register.aspx");
    //    }
    //}



}

 @*
    if (@bind-SelectedOption="@Placement.Top")
    {
    int s = pay.Price;
    cus.MyCredits = cus.MyCredits + s;

    }
*@