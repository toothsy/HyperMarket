@page "/ProductDetails"
@using HyperMarket.DB.Models
@using HyperMarket.UIControls.LoadingIcon
@inject HyperMarket.Data.Interfaces.IPaymentService paymentService
@inject HyperMarket.Data.Interfaces.ICustomerDetailService customerdetailService
@inject HyperMarket.Data.Interfaces.IOrderService orderService
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject HyperMarket.Data.Interfaces.IBusinessDetailService businessdetailService
@inject AuthenticationStateProvider AuthStateProvider
@using HyperMarket.ViewModels;
@inject ISnackbar Snackbar

@if (prod == null) {
        <Loading/>
    }

else{
    
@*<MudCard>
    <MudCardMedia Image=@prod.ImageUrl  />
    <MudCardContent>
        <MudText Typo="Typo.h5">@prod.ProductName</MudText>
        <MudText Typo="Typo.h5">@prod.Price</MudText>
        <MudText Typo="Typo.h5">@proddescription</MudText>
        <MudText Typo="Typo.h5">@prodinclusion</MudText>
        <MudText Typo="Typo.h5">@prodcondition</MudText>
        <MudText Typo="Typo.body2">@prod.AddressLine1</MudText>
        <MudText Typo="Typo.body2">@prod.AddressLine2</MudText>
        <MudText Typo="Typo.body2">@prod.AddressLine3</MudText>
        <MudText Typo="Typo.body2">@prod.Pin</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant="Variant.Text" Color="Color.Primary" ButtonType="ButtonType.Submit"><a href="/">All Offers</a></MudButton>
        <MudButton Variant="Variant.Text" Color="Color.Primary" ButtonType="ButtonType.Submit"><a href="/offers">More Offers</a></MudButton>
        <div class="paymentbtn">
            <MudButton ButtonType="ButtonType.Submit" Align="align.Center"><a href="/MyPayment"><div class="btncolor">Buy Now</div></a></MudButton>
        </div>
    </MudCardActions>
</MudCard>*@
<div class="background">
    <div class="details">
        <div class="info">
           <div class="image-container">
               <img src=@prod.ImageUrl />
           </div>
           <div class="product-details">
               <h1>@prod.ProductName</h1>
               <h2>@prod.ProductDescription</h2>
               <hr/>
               <h2>Address</h2>
               <h6>@prod.AddressLine1</h6>
               <h6>@prod.AddressLine2</h6>
               <h6>@prod.AddressLine3</h6>
               <hr/>
               <div class="d-flex">
               <p>@prod.Price &#8377;</p>
                   <button class="paymentbtn" >
                            <a href="/MyPayment">Buy Now</a>
                   </button>    
               </div>
               <hr/>
               <h6>Pincode:@prod.Pin</h6>
               <h6>@prodcondition,@prodinclusion</h6>

           </div>
        </div>
        <div class="more-stuff">
            <button class="paymentbtn" >
                    <a href="/">More products</a>
            </button>   
        </div>
    </div>
</div>
}
@code {
    public Product prod;
    private string proddescription = string.Empty;
    private string prodinclusion = string.Empty;
    private string prodcondition = string.Empty;
    private string check = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        prod = await sessionStorage.GetItemAsync<Product>("product");
        check = prod.ProductDescription;
        int l = check.Length;
        int i;
        int j = 0;
        int c = 0;
        for(i=0;i<l;i++)
        {
            if(check[i]=='&'&&check[i+1]=='b')
            {
                if(j==0)
                {
                    proddescription = check.Substring(0, i);
                    j++;
                    c = i;
                }
                if(j==1)
                {
                    prodinclusion = check.Substring(c,(i - c));
                    j++;
                    c = i;
                }
                if(j==2)
                {
                    prodcondition = check.Substring(i);
                }
            }
        }
        if(j==0)
        {
            proddescription = check;
            prodinclusion="No Inclusion";
            prodcondition = "No Condition Applied";
        }
    }
}



