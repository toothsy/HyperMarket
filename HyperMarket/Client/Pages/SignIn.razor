@page "/SignIn"
@inject NavigationManager NavigationManager
@inject IAuthService AuthService
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="bg">
    <center>

        <EditForm Model="userSignin" OnValidSubmit="HandleGetOTP" hidden="@(!hideForm)">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <MudGrid Class="d-flex justify-center align-center">
                <MudItem xs="12" sm="7">
                    <MudCard>
                        <MudCardContent>
                            <h3>Sign In</h3>

                            Please Sign In below or <a href="signup">Sign Up</a> for a new account.

                            <MudTextField Label="Email Id" @bind-Value="userSignin.Email" For="@(()=> userSignin.Email)" InputType="InputType.Email" />
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Get OTP</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </EditForm>

        <EditForm Model="userOTP" OnValidSubmit="HandleSignin" hidden="@(hideForm)">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <MudGrid Class="d-flex justify-center align-center">
                <MudItem xs="12" sm="7">
                    <MudCard>
                        <MudCardContent>
                            <MudTextField Label="OTP" @bind-Value="userOTP.OTP" For="@(()=> userOTP.OTP)" InputType="InputType.Number" />
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Sign In</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </EditForm>
    </center>
</div>


@code {
    UserSignin userSignin = new UserSignin();
    UserOTP userOTP = new UserOTP();
    private bool hideForm = true;

    async void HandleSignin()
    {
        var result = await AuthService.Signin(userSignin, userOTP);
        if (result.Success)
        {
            await LocalStorage.SetItemAsync<string>("authToken", result.Data);
            await AuthenticationStateProvider.GetAuthenticationStateAsync();

            if (NavigationManager.Uri.EndsWith("/signin"))
            {
                NavigationManager.NavigateTo("/");
            }
            else
            {
                NavigationManager.NavigateTo(NavigationManager.Uri);
            }
        }
        else
        {
            Console.WriteLine(result.Message);
        }
    }

    async void HandleGetOTP()
    {
        hideForm = !hideForm;
        userSignin.OTPValidate = new OTPValidate() { UserOTP = string.Empty, EncryptedActualOTPTimestamp = string.Empty };
        var result = await AuthService.GetOTP(userSignin);
        if (result.Success)
        {
            Console.WriteLine(result.Message);
            await LocalStorage.SetItemAsync<string>("OTP", result.Data);
        }
        else
        {
            Console.WriteLine(result.Message);
        }
    }
}
