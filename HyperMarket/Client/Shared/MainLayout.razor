@inherits LayoutComponentBase
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject HyperMarket.Data.Interfaces.IConfigService configService
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject AuthenticationStateProvider AuthStateProvider
@inject ISnackbar Snackbar


<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />


<MudLayout>
    <div class="flex-container">
        <MudAppBar Fixed="true" Dense="true" Color="Color.Error">
            <div><a href="/"> <MudImage Src="images/LOGO.png" Width="48" Height="48" /></a></div>
            <div id="location-dropdown">  
                <MudSelect T="Location" Class="wider" @bind-Value="savedLocation" 
                SelectedValuesChanged="@saveLocation" Label="Location" AnchorOrigin="Origin.BottomCenter">
                    @foreach (var item in AllLocations)
                    {
                        <MudSelectItem Class="wider" Value="@(@item)" >@item.LocationName</MudSelectItem>
                        <MudDivider />
                    }

                 </MudSelect>
            </div>
            <MudSpacer/>
            <AuthorizeView Roles="User">
                <Authorized>
                    <div class="navbar-padding">
                        <span>Hi, @context.User.Identity.Name </span>
                    </div>
                    @if(userId == 1022)
                    {
                    <div class="navbar-padding">
                        <MudLink href="RoleAuthoring"><div class="appcolor">Manage Roles</div></MudLink>
                        </div>
                        <div class="navbar-padding">
                            <MudSelect T="string" Label="My Account"  AnchorOrigin="Origin.BottomCenter">
                               <a href="/MyProfile"><MudSelectItem Value="@("My Profile")" /></a>
                               <a href="/MyOrderCus"><MudSelectItem Value="@("My Orders")" /></a>

                            </MudSelect>
                    </div>
                    }
                    else
                    {
                        <div class="navbar-padding">
                        <MudLink href="listBusiness"><div class="appcolor">List Your Business</div></MudLink>
                        </div>
                        <div class="navbar-padding">
                            <MudSelect T="string" Label="My Account"  AnchorOrigin="Origin.BottomCenter">
                                <a href="/MyProfile"><MudSelectItem Value="@("My Profile")" /></a>
                               <a href="/MyOrderCus"><MudSelectItem Value="@("My Orders")" /></a>
                                <a href="/MyBusiness"><MudSelectItem Value="@("My Business")" /></a>
                                <a href="/AddProduct"><MudSelectItem Value="@("Add Product")" /></a>
                                <a href="/MyProduct"><MudSelectItem Value="@("My Products")" /></a>

                            </MudSelect>
                        </div>
                    

                    }
                    <div class="navbar-padding"> 
                        <MudLink @onclick="Signout">
                            <div class="appcolor">Sign Out</div>
                        </MudLink>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div class="non-authorised">
                        <div>
                            <a href="signin">
                                <div class="appcolor app">Sign In</div>
                            </a>
                        </div>
                        <div>
                            <a href="signup">
                                <div class="appcolor app">Sign Up</div>
                            </a>
                       </div>
                   </div>

                </NotAuthorized>
            </AuthorizeView>

        </MudAppBar>
    </div>

    <MudMainContent Class="body">
        @Body
    </MudMainContent>

        <footer>
        <div class="footer">
            <div class="inner_footer">
                <div class="logo_container">
                    <img src="images/LOGO.png"
                </div>


                <div class="footer-third">
                    <h1>Need Help?</h1>
                    <a href="/About">About Us</a>
                    <a href="/FAQ">FAQ</a>
                    <a href="/ContactUs">Contact Us</a>
                </div>


                <div class="footer-third">
                    <h1>Learn More</h1>
                    <a href="/">Terms and conditions</a>
                    <a href="/Blog">Blog</a>
                </div>


                <div class="footer-third">
                    <h1>Reach out to us</h1>
                    <div class="links">
                        <a href="@config.FaceBookHandle" target="_blank">
                                <MudIconButton Icon="@Icons.Custom.Brands.Facebook" 
                                Color="Color.Primary" aria-label="facebook"/>
                        </a>
                        <a href="@config.InstaHandle" target="_blank">
                                <MudIconButton Icon="@Icons.Custom.Brands.Instagram" 
                                    Color="Color.Primary" aria-label="instagram" />
                        </a>
                        <a href="@config.TwitterHandle" target="_blank">
                                <MudIconButton Icon="@Icons.Custom.Brands.Twitter" 
                                        Color="Color.Primary" aria-label="twitter"/>
                        </a>
                        <a href="@config.YouTubeHandle" target="_blank">
                                <MudIconButton Icon="@Icons.Custom.Brands.YouTube" 
                                        Color="Color.Primary" aria-label="youtube"/>
                        </a>
                    </div>
                </div>
            </div>
    </div>
    </footer>
</MudLayout>


@code
{
    public List<Location> AllLocations = new List<Location>();
    public Config config = new Config();
    public Location savedLocation;
    public int userId;
    protected override async Task OnInitializedAsync(){
        AuthenticationState ac = await AuthStateProvider.GetAuthenticationStateAsync();
        try
        {
            string testForTokenPresence = await LocalStorage.GetItemAsync<string>("authToken");
            userId = Int32.Parse(ac.User.Claims.FirstOrDefault(i => i.Type == System.Security.Claims.ClaimTypes.NameIdentifier).Value);
        }
        catch
        {
            Snackbar.Add("Heyy, you might wanna sign in/ up,✌", Severity.Info);

            
        }
        AllLocations = await locationService.GetAllLocation();
        config = await configService.GetConfigById(601);

    }

    private async void saveLocation(){

        await sessionStorage.SetItemAsync("Location",this.savedLocation);
        NavigationManager.NavigateTo("/",true);

    }

    private async void Signout()
    {
        await LocalStorage.RemoveItemAsync("authToken");
        await AuthStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("/");
    }
}